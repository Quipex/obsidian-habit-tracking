// meta/dv/relative-date-info.js

const locale = input?.locale ?? "ru";

if (!dv.luxon) {
  dv.paragraph("–û—à–∏–±–∫–∞: –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Luxon –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞.");
  return;
}

// –ë–µ—Ä—ë–º –¥–∞—Ç—É –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ (–æ–∂–∏–¥–∞–µ—Ç—Å—è YYYY-MM-DD)
const noteDate = dv.luxon.DateTime.fromISO(dv.current().file.name);

if (!noteDate.isValid) {
  dv.paragraph("–û—à–∏–±–∫–∞: –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –¥–∞—Ç–æ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD.");
  return;
}

const today = dv.luxon.DateTime.now().startOf("day");

const rawWeekday = noteDate.setLocale(locale).toFormat("cccc");
const weekday = rawWeekday.charAt(0).toUpperCase() + rawWeekday.slice(1);

let relativeString;
if (today.hasSame(noteDate, "day")) {
  relativeString = "–°–µ–≥–æ–¥–Ω—è üìÖ";
} else {
  const rel = noteDate.toRelative({ base: today, locale });
  relativeString = rel ? rel.charAt(0).toUpperCase() + rel.slice(1) : "";
}

dv.container.style.opacity = "0.8";
dv.paragraph(`**${relativeString}** ¬∑ ${weekday}`);
